query getContainer($urn: String!) {
  container(urn: $urn) {
    urn
    exists
    lastIngested
    platform {
      ...platformFields
      __typename
    }
    properties {
      name
      description
      customProperties {
        key
        value
        __typename
      }
      __typename
    }
    privileges {
      ...entityPrivileges
      __typename
    }
    editableProperties {
      description
      __typename
    }
    ownership {
      ...ownershipFields
      __typename
    }
    tags {
      ...globalTagsFields
      __typename
    }
    institutionalMemory {
      ...institutionalMemoryFields
      __typename
    }
    glossaryTerms {
      ...glossaryTerms
      __typename
    }
    subTypes {
      typeNames
      __typename
    }
    entities(input: {start: 0, count: 1}) {
      total
      __typename
    }
    container {
      ...entityContainer
      __typename
    }
    parentContainers {
      ...parentContainersFields
      __typename
    }
    domain {
      ...entityDomain
      __typename
    }
    ...entityDataProduct
    deprecation {
      ...deprecationFields
      __typename
    }
    dataPlatformInstance {
      ...dataPlatformInstanceFields
      __typename
    }
    status {
      removed
      __typename
    }
    autoRenderAspects: aspects(input: {autoRenderOnly: true}) {
      ...autoRenderAspectFields
      __typename
    }
    structuredProperties {
      properties {
        ...structuredPropertiesFields
        __typename
      }
      __typename
    }
    forms {
      ...formsFields
      __typename
    }
    __typename
  }
}

fragment platformFields on DataPlatform {
  urn
  type
  lastIngested
  name
  properties {
    type
    displayName
    datasetNameDelimiter
    logoUrl
    __typename
  }
  displayName
  info {
    type
    displayName
    datasetNameDelimiter
    logoUrl
    __typename
  }
  __typename
}

fragment entityPrivileges on EntityPrivileges {
  canEditLineage
  canEditQueries
  canEditEmbed
  canManageEntity
  canManageChildren
  canEditProperties
  __typename
}

fragment ownershipFields on Ownership {
  owners {
    owner {
      ... on CorpUser {
        urn
        type
        username
        info {
          active
          displayName
          title
          email
          firstName
          lastName
          fullName
          __typename
        }
        properties {
          active
          displayName
          title
          email
          firstName
          lastName
          fullName
          __typename
        }
        editableProperties {
          displayName
          title
          pictureLink
          email
          __typename
        }
        __typename
      }
      ... on CorpGroup {
        urn
        type
        name
        properties {
          displayName
          email
          __typename
        }
        info {
          displayName
          email
          admins {
            urn
            username
            info {
              active
              displayName
              title
              email
              firstName
              lastName
              fullName
              __typename
            }
            editableInfo {
              pictureLink
              teams
              skills
              __typename
            }
            __typename
          }
          members {
            urn
            username
            info {
              active
              displayName
              title
              email
              firstName
              lastName
              fullName
              __typename
            }
            editableInfo {
              pictureLink
              teams
              skills
              __typename
            }
            __typename
          }
          groups
          __typename
        }
        __typename
      }
      __typename
    }
    type
    ownershipType {
      urn
      type
      info {
        name
        description
        __typename
      }
      status {
        removed
        __typename
      }
      __typename
    }
    associatedUrn
    __typename
  }
  lastModified {
    time
    __typename
  }
  __typename
}

fragment globalTagsFields on GlobalTags {
  tags {
    tag {
      urn
      type
      name
      description
      properties {
        name
        colorHex
        __typename
      }
      __typename
    }
    associatedUrn
    __typename
  }
  __typename
}

fragment institutionalMemoryFields on InstitutionalMemory {
  elements {
    url
    author {
      urn
      username
      __typename
    }
    description
    created {
      actor
      time
      __typename
    }
    associatedUrn
    __typename
  }
  __typename
}

fragment glossaryTerms on GlossaryTerms {
  terms {
    term {
      ...glossaryTerm
      __typename
    }
    associatedUrn
    __typename
  }
  __typename
}

fragment glossaryTerm on GlossaryTerm {
  urn
  name
  type
  hierarchicalName
  properties {
    name
    description
    definition
    termSource
    customProperties {
      key
      value
      __typename
    }
    __typename
  }
  ownership {
    ...ownershipFields
    __typename
  }
  parentNodes {
    ...parentNodesFields
    __typename
  }
  __typename
}

fragment parentNodesFields on ParentNodesResult {
  count
  nodes {
    urn
    type
    properties {
      name
      __typename
    }
    __typename
  }
  __typename
}

fragment entityContainer on Container {
  urn
  platform {
    ...platformFields
    __typename
  }
  properties {
    name
    __typename
  }
  subTypes {
    typeNames
    __typename
  }
  deprecation {
    ...deprecationFields
    __typename
  }
  __typename
}

fragment deprecationFields on Deprecation {
  actor
  deprecated
  note
  decommissionTime
  __typename
}

fragment parentContainersFields on ParentContainersResult {
  count
  containers {
    ...parentContainerFields
    __typename
  }
  __typename
}

fragment parentContainerFields on Container {
  urn
  properties {
    name
    __typename
  }
  subTypes {
    typeNames
    __typename
  }
  __typename
}

fragment entityDomain on DomainAssociation {
  domain {
    urn
    type
    properties {
      name
      description
      __typename
    }
    parentDomains {
      ...parentDomainsFields
      __typename
    }
    ...domainEntitiesFields
    __typename
  }
  associatedUrn
  __typename
}

fragment parentDomainsFields on ParentDomainsResult {
  count
  domains {
    urn
    type
    ... on Domain {
      properties {
        name
        description
        __typename
      }
      __typename
    }
    __typename
  }
  __typename
}

fragment domainEntitiesFields on Domain {
  entities(input: {start: 0, count: 0}) {
    total
    __typename
  }
  dataProducts: entities(
    input: {start: 0, count: 0, filters: [{field: "_entityType", value: "DATA_PRODUCT"}]}
  ) {
    total
    __typename
  }
  children: relationships(
    input: {types: ["IsPartOf"], direction: INCOMING, start: 0, count: 0}
  ) {
    total
    __typename
  }
  __typename
}

fragment entityDataProduct on Entity {
  dataProduct: relationships(
    input: {types: ["DataProductContains"], direction: INCOMING, start: 0, count: 1}
  ) {
    relationships {
      type
      entity {
        urn
        type
        ... on DataProduct {
          properties {
            name
            description
            __typename
          }
          domain {
            ...entityDomain
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  __typename
}

fragment dataPlatformInstanceFields on DataPlatformInstance {
  urn
  type
  platform {
    ...platformFields
    __typename
  }
  instanceId
  __typename
}

fragment autoRenderAspectFields on RawAspect {
  aspectName
  payload
  renderSpec {
    displayType
    displayName
    key
    __typename
  }
  __typename
}

fragment structuredPropertiesFields on StructuredPropertiesEntry {
  structuredProperty {
    ...structuredPropertyFields
    __typename
  }
  values {
    ... on StringValue {
      stringValue
      __typename
    }
    ... on NumberValue {
      numberValue
      __typename
    }
    __typename
  }
  valueEntities {
    urn
    type
    ...entityDisplayNameFields
    __typename
  }
  __typename
}

fragment structuredPropertyFields on StructuredPropertyEntity {
  urn
  type
  definition {
    displayName
    qualifiedName
    description
    cardinality
    immutable
    valueType {
      info {
        type
        displayName
        __typename
      }
      __typename
    }
    entityTypes {
      info {
        type
        __typename
      }
      __typename
    }
    cardinality
    typeQualifier {
      allowedTypes {
        urn
        type
        info {
          type
          displayName
          __typename
        }
        __typename
      }
      __typename
    }
    allowedValues {
      value {
        ... on StringValue {
          stringValue
          __typename
        }
        ... on NumberValue {
          numberValue
          __typename
        }
        __typename
      }
      description
      __typename
    }
    __typename
  }
  __typename
}

fragment entityDisplayNameFields on Entity {
  urn
  type
  ... on Dataset {
    name
    properties {
      name
      qualifiedName
      __typename
    }
    __typename
  }
  ... on CorpUser {
    username
    properties {
      displayName
      title
      firstName
      lastName
      fullName
      email
      __typename
    }
    info {
      active
      displayName
      title
      firstName
      lastName
      fullName
      email
      __typename
    }
    __typename
  }
  ... on CorpGroup {
    name
    info {
      displayName
      __typename
    }
    __typename
  }
  ... on Dashboard {
    dashboardId
    properties {
      name
      __typename
    }
    __typename
  }
  ... on Chart {
    chartId
    properties {
      name
      __typename
    }
    __typename
  }
  ... on DataFlow {
    properties {
      name
      __typename
    }
    __typename
  }
  ... on DataJob {
    jobId
    properties {
      name
      __typename
    }
    __typename
  }
  ... on GlossaryTerm {
    name
    hierarchicalName
    properties {
      name
      __typename
    }
    __typename
  }
  ... on GlossaryNode {
    properties {
      name
      __typename
    }
    __typename
  }
  ... on Domain {
    properties {
      name
      __typename
    }
    __typename
  }
  ... on Container {
    properties {
      name
      __typename
    }
    __typename
  }
  ... on MLFeatureTable {
    name
    __typename
  }
  ... on MLFeature {
    name
    __typename
  }
  ... on MLPrimaryKey {
    name
    __typename
  }
  ... on MLModel {
    name
    __typename
  }
  ... on MLModelGroup {
    name
    __typename
  }
  ... on Tag {
    name
    properties {
      name
      colorHex
      __typename
    }
    __typename
  }
  ... on DataPlatform {
    ...nonConflictingPlatformFields
    __typename
  }
  ... on DataProduct {
    properties {
      name
      __typename
    }
    __typename
  }
  ... on DataPlatformInstance {
    instanceId
    __typename
  }
  __typename
}

fragment nonConflictingPlatformFields on DataPlatform {
  urn
  type
  name
  properties {
    displayName
    datasetNameDelimiter
    logoUrl
    __typename
  }
  displayName
  info {
    type
    displayName
    datasetNameDelimiter
    logoUrl
    __typename
  }
  __typename
}

fragment formsFields on Forms {
  completedForms {
    ...formAssociationFields
    __typename
  }
  incompleteForms {
    ...formAssociationFields
    __typename
  }
  verifications {
    form {
      urn
      __typename
    }
    lastModified {
      time
      actor {
        urn
        type
        ...entityDisplayNameFields
        __typename
      }
      __typename
    }
    __typename
  }
  __typename
}

fragment formAssociationFields on FormAssociation {
  associatedUrn
  incompletePrompts {
    ...formPromptAssociationFields
    __typename
  }
  completedPrompts {
    ...formPromptAssociationFields
    __typename
  }
  form {
    urn
    type
    info {
      name
      description
      type
      prompts {
        id
        formUrn
        title
        description
        type
        required
        structuredPropertyParams {
          structuredProperty {
            ...structuredPropertyFields
            __typename
          }
          __typename
        }
        __typename
      }
      actors {
        owners
        isAssignedToMe
        __typename
      }
      __typename
    }
    ownership {
      ...ownershipFields
      __typename
    }
    __typename
  }
  __typename
}

fragment formPromptAssociationFields on FormPromptAssociation {
  id
  lastModified {
    time
    actor {
      urn
      type
      ...entityDisplayNameFields
      __typename
    }
    __typename
  }
  fieldAssociations {
    completedFieldPrompts {
      fieldPath
      lastModified {
        time
        actor {
          urn
          type
          ...entityDisplayNameFields
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  __typename
}
